<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.gematik.tim.test</groupId>
  <artifactId>TI-Messenger-Testsuite</artifactId>
  <version>1.4.3</version>
  <packaging>jar</packaging>
  <name>TI-Messenger-Testsuite</name>
  <description>Testsuite to check functionality of TI-Messenger-Clients</description>
  <url>https://github.com/gematik/TI-Messenger-Testsuite</url>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <jacoco.version>0.8.8</jacoco.version>
    <cucumber-test-combinations-maven-plugin.version>
      2.11.1
    </cucumber-test-combinations-maven-plugin.version>
    <tiger.version>3.4.7</tiger.version>
    <serenity.core.version>4.2.3</serenity.core.version>
    <polarion.toolbox.version>3.0.0-185</polarion.toolbox.version>
    <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
    <maven.javadoc.plugin.version>3.6.3</maven.javadoc.plugin.version>
    <ti.m.mtls.certs.version>1.4.0</ti.m.mtls.certs.version>

    <ti.m.mtls.output.directory>${project.build.directory}/profile-resources</ti.m.mtls.output.directory>
    <tim.shared.properties>${ti.m.mtls.output.directory}/shared.properties</tim.shared.properties>
    <feature_dir>${project.build.directory}/features/</feature_dir>
    <feature.template.dir>
      ${project.basedir}/src/test/resources/templates/FeatureFiles/TI-M_11X/Zulassungstests
    </feature.template.dir>
    <sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>
    <feature.tables.max_rows>9999</feature.tables.max_rows>
    <maven.build.timestamp.format>yyyy-MM-dd_HH_mm_ss</maven.build.timestamp.format>
    <skip.saving.reports>false</skip.saving.reports>
    <tiger.config.file>tiger.yml</tiger.config.file>
    <combine.items.file>
      ${project.basedir}/src/test/resources/combine_items.json
    </combine.items.file>
    <tim.truststore>${env.TIM_TRUSTSTORE}</tim.truststore>
    <tim.truststore.pw>${env.TIM_TRUSTSTORE_PW}</tim.truststore.pw>
    <tim.keystore>${env.TIM_KEYSTORE}</tim.keystore>
    <tim.keystore.pw>${env.TIM_KEYSTORE_PW}</tim.keystore.pw>
    <tim.fproxy.host>${env.TIM_PROXY_HOST}</tim.fproxy.host>
    <tim.fproxy.port>${env.TIM_PROXY_PORT}</tim.fproxy.port>
    <cutest.prepare.skip>false</cutest.prepare.skip>
    <cutest.prepare.skipPrepare>false</cutest.prepare.skipPrepare>
    <cutest.prepare.skipCombine>false</cutest.prepare.skipCombine>
    <cutest.prepare.skipCheck>false</cutest.prepare.skipCheck>
    <cutest.break.context>true</cutest.break.context>
    <cutest.break.request>true</cutest.break.request>
    <cutest.break.tablesize>true</cutest.break.tablesize>
    <soft-filter.to.hard>false</soft-filter.to.hard>
    <skip.save.tiger-yml>false</skip.save.tiger-yml>
    <custom.plugin>de.gematik.tim.test.glue.api.utils.cleaning.CucumberListener</custom.plugin>
    <maxRetryClaimRequest/>
    <saveConnections/>
    <claimParallel/>
    <pollInterval/>
    <timeout/>
    <httpTimeout/>
    <claimDuration/>
    <cucumber.filter.tags/>
    <pool.group.string/>
    <clearRooms/>
    <cucumber.filter.version/>
    <cutest.count.format/>
    <skipRoomStateCheck/>
  </properties>
  <distributionManagement>
    <repository>
      <id>releases</id>
      <!--suppress UnresolvedMavenProperty -->
      <url>${releaseDeploymentRepository}</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <!--suppress UnresolvedMavenProperty -->
      <url>${snapshotDeploymentRepository}</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>de.gematik.test</groupId>
      <artifactId>tiger-test-lib</artifactId>
      <version>${tiger.version}</version>
    </dependency>
    <dependency>
      <groupId>de.gematik</groupId>
      <artifactId>tiger-cloud-extension</artifactId>
      <version>1.0.10</version>
    </dependency>
    <dependency>
      <groupId>net.sf.supercsv</groupId>
      <artifactId>super-csv</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-screenplay-rest</artifactId>
      <version>${serenity.core.version}</version>
    </dependency>
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-ensure</artifactId>
      <version>${serenity.core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>9.37.3</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.30</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>4.0.2</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/versions.txt</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <debug>true</debug>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <doclint>none</doclint>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.gematik</groupId>
        <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
        <version>${cucumber-test-combinations-maven-plugin.version}</version>
        <configuration>
          <skip>${cutest.prepare.skip}</skip>
          <skipPrep>${cutest.prepare.skipPrepare}</skipPrep>
          <skipComb>${cutest.prepare.skipCombine}</skipComb>
          <skipCheck>${cutest.prepare.skipCheck}</skipCheck>
          <acceptUnknownInfo>true</acceptUnknownInfo>
          <!--          Global Config-->
          <combineItemsFile>${combine.items.file}</combineItemsFile>
          <breakOnContextError>${cutest.break.context}</breakOnContextError>
          <breakOnFailedRequest>${cutest.break.request}</breakOnFailedRequest>
          <truststore>${tim.truststore}</truststore>
          <truststorePw>${tim.truststore.pw}</truststorePw>
          <clientCertStore>${tim.keystore}</clientCertStore>
          <clientCertStorePw>${tim.keystore.pw}</clientCertStorePw>
          <proxyHost>${tim.fproxy.host}</proxyHost>
          <proxyPort>${tim.fproxy.port}</proxyPort>
          <!--          Prepare item config-->
          <envVarFormat>html</envVarFormat>
          <poolGroupString>${pool.group.string}</poolGroupString>
          <tagExpressions>
            <tagExpression>
              <tag>client</tag>
              <expression>
                $.clientInfo.canSendMessages and
                not($.clientInfo.isInsurance) and
                not($.clientInfo.isPro)
              </expression>
            </tagExpression>
            <tagExpression>
              <tag>canSendMessages</tag>
              <expression>$.clientInfo.canSendMessages</expression>
            </tagExpression>
            <tagExpression>
              <tag>orgAdmin</tag>
              <expression>$.clientInfo.canAdministrateFhirOrganization</expression>
            </tagExpression>
            <tagExpression>
              <tag>practitioner</tag>
              <expression>$.clientInfo.canAdministrateFhirPractitioner</expression>
            </tagExpression>
            <tagExpression>
              <tag>epaClient</tag>
              <expression>
                $.clientInfo.canSendMessages and
                $.clientInfo.isInsurance and
                not($.clientInfo.isPro)
              </expression>
            </tagExpression>
            <tagExpression>
              <tag>proClient</tag>
              <expression>
                $.clientInfo.canSendMessages and
                $.clientInfo.isPro and
                not($.clientInfo.isInsurance)
              </expression>
            </tagExpression>
            <tagExpression>
              <tag>epaOrProClient</tag>
              <expression>
                $.clientInfo.canSendMessages and
                ($.clientInfo.isInsurance or
                $.clientInfo.isPro)
              </expression>
            </tagExpression>
          </tagExpressions>
          <propertyExpressions>
            <propertyExpression>
              <property>homeserver</property>
              <expression>$.homeserver</expression>
            </propertyExpression>
            <propertyExpression>
              <property>os</property>
              <expression>$.clientInfo.osInfo.operatingSystem</expression>
            </propertyExpression>
            <propertyExpression>
              <property>company</property>
              <expression>$.contact.name</expression>
            </propertyExpression>
            <propertyExpression>
              <property>testApiVersion</property>
              <expression>$.testDriverVersion</expression>
            </propertyExpression>
            <propertyExpression>
              <property>clientVersion</property>
              <expression>$.clientInfo.version</expression>
            </propertyExpression>
          </propertyExpressions>
          <!--          Check config-->
          <checkPath>devices</checkPath>
          <defaultCheckExpressions>
            ITEM.hasTag("orgAdmin") and ITEM.hasTag("client") ? $.devices.size() >= 4 :
            ITEM.hasTag("orgAdmin") ?
            $.devices.size() >= 1 : $.devices.size() >= 3
          </defaultCheckExpressions>
          <!--          Combine config-->
          <breakIfTableToSmall>${cutest.break.tablesize}</breakIfTableToSmall>
          <outputDir>${feature_dir}</outputDir>
          <templateSources>${feature.template.dir}</templateSources>
          <filterConfiguration>
            <maxTableRows>${feature.tables.max_rows}</maxTableRows>
          </filterConfiguration>
          <projectFilters>
            <version>${cucumber.filter.version}</version>
          </projectFilters>
          <versionProperty>clientVersion</versionProperty>
          <softFilterToHardFilter>${soft-filter.to.hard}</softFilterToHardFilter>
          <countExecutionsFormat>${cutest.count.format}</countExecutionsFormat>
        </configuration>

        <executions>
          <execution>
            <id>prepare-items</id>
            <goals>
              <goal>prepare-items</goal>
            </goals>
          </execution>
          <execution>
            <id>checkApis</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
          <execution>
            <id>combine-items</id>
            <goals>
              <goal>prepare-combine</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.gematik.test</groupId>
        <artifactId>tiger-maven-plugin</artifactId>
        <version>${tiger.version}</version>
        <executions>
          <execution>
            <configuration>
              <skip>false</skip>
              <featuresDir>${feature_dir}</featuresDir>
              <includes>
                <include>**/*.feature</include>
              </includes>
              <glues>
                <glue>de.gematik.test.tiger.hooks</glue>
                <glue>de.gematik.test.tiger.glue</glue>
                <glue>de.gematik.tim.test.glue</glue>
              </glues>
              <driverPackage>
                de.gematik.tim.test.drivers
              </driverPackage>
              <!-- optional -->
              <!--suppress UnresolvedMavenProperty -->
              <driverClassName>Parallel${ctr}IT</driverClassName>
              <templateFile>${project.basedir}/src/main/resources/driver5ClassTemplate.jtmpl</templateFile>
            </configuration>
            <id>default-sources</id>
            <goals>
              <goal>generate-drivers</goal>
              <goal>generate-serenity-reports</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <environmentVariables>
            <TIGER_TESTENV_CFGFILE>${tiger.config.file}</TIGER_TESTENV_CFGFILE>
          </environmentVariables>
          <systemPropertyVariables>
            <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
            <cucumber.plugin>${custom.plugin}</cucumber.plugin>
          </systemPropertyVariables>
          <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>6.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/api/TiMessengerTestTreiber.yaml
              </inputSpec>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <generatorName>java</generatorName>
              <modelPackage>de.gematik.tim.test.models</modelPackage>
              <modelNameSuffix>DTO</modelNameSuffix>
              <generateApis>false</generateApis>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>false</generateSupportingFiles>
              <configOptions>
                <library>resttemplate</library>
                <serializationLibrary>jackson</serializationLibrary>
                <dateLibrary>java8</dateLibrary>
                <sourceFolder>src/generated/java/main</sourceFolder>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>local-timestamp-property</id>
            <phase>validate</phase>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <configuration>
              <name>build.time</name>
              <pattern>${maven.build.timestamp.format}</pattern>
              <locale>de_DE</locale>
              <timeZone>Europe/Berlin</timeZone>
              <timeSource>build</timeSource>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${feature_dir}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>rename-index-file</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${basedir}/target/site/serenity/index.html</sourceFile>
              <destinationFile>${basedir}/target/site/serenity/#index.html</destinationFile>
            </configuration>
          </execution>
          <execution>
            <id>rename-summary-file</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${basedir}/target/site/serenity/serenity-summary.html</sourceFile>
              <destinationFile>${basedir}/target/site/serenity/#serenity-summary.html
              </destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <skip>${skip.saving.reports}</skip>
        </configuration>
        <executions>
          <execution>
            <id>save_raw-data-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/raw-data</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-raw-data</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save_features</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/features</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/features</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save_combine-item</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/combine-items</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-combine</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save-used-tiger-yml</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <skip>${skip.save.tiger-yml}</skip>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/combine-items</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/profile-resources</directory>
                  <includes>
                    <include>tiger*.yml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save-used-versions</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/versions</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/classes</directory>
                  <includes>
                    <include>versions.txt</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save-individual-log</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target</directory>
                  <includes>
                    <include>individual-log.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save-mvn-properties</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report/additional-data/mvn-properties</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target</directory>
                  <includes>
                    <include>saved_mvn.properties</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.outputDirectory}/mvn.properties</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <!--Extract mtls-certs resources-->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>get-resources-for-prod</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${project.groupId}</groupId>
                      <artifactId>TI-Messenger-mTLS-Certs</artifactId>
                      <version>${ti.m.mtls.certs.version}</version>
                      <type>jar</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>
                        ${project.build.directory}/profile-resources
                      </outputDirectory>
                      <includes>**/*.yml,**/*.json,gemRoot/cert/gem/*.p12</includes>
                      <excludes>META-INF/**</excludes>
                    </artifactItem>
                  </artifactItems>
                  <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--      Done with "cp" to keep timestamp-->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <skip>${skip.saving.reports}</skip>
            </configuration>
            <executions>
              <execution>
                <id>save_reports</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>cp</executable>
                  <arguments>
                    <argument>-a</argument>
                    <argument>${project.build.directory}/site/serenity/.</argument>
                    <argument>${basedir}/reports/${build.time}/report/</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <combine.items.file>
          ${ti.m.mtls.output.directory}/combine_items_prod.json
        </combine.items.file>
        <tiger.config.file>
          ${ti.m.mtls.output.directory}/tiger-prod.yml
        </tiger.config.file>
        <tim.truststore>
          ${ti.m.mtls.output.directory}/gemRoot/cert/gem/gemTruststore.p12
        </tim.truststore>
        <tim.truststore.pw>${env.PROD_TRUSTSTORE_PW}</tim.truststore.pw>
        <tim.keystore>
          ${ti.m.mtls.output.directory}/gemRoot/cert/gem/gemKeystore.p12
        </tim.keystore>
        <tim.keystore.pw>${env.PROD_KEYSTORE_PW}</tim.keystore.pw>
        <timeout>240</timeout>
        <pollInterval>5</pollInterval>
        <claimDuration>600</claimDuration>
        <soft-filter.to.hard>true</soft-filter.to.hard>
        <cutest.count.format>txt,json</cutest.count.format>
        <skip.save.tiger-yml>true</skip.save.tiger-yml>
      </properties>
      <dependencies>
        <dependency>
          <groupId>de.gematik.tim.test</groupId>
          <artifactId>TI-Messenger-mTLS-Certs</artifactId>
          <version>${ti.m.mtls.certs.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>reference-ci</id>
      <properties>
        <combine.items.file>
          ${ti.m.mtls.output.directory}/combine_items_prod.json
        </combine.items.file>
        <tiger.config.file>
          ${ti.m.mtls.output.directory}/tiger-prod.yml
        </tiger.config.file>
        <tim.truststore>
          ${ti.m.mtls.output.directory}/gemRoot/cert/gem/gemTruststore.p12
        </tim.truststore>
        <tim.truststore.pw>${env.PROD_TRUSTSTORE_PW}</tim.truststore.pw>
        <tim.keystore>
          ${ti.m.mtls.output.directory}/gemRoot/cert/gem/gemKeystore.p12
        </tim.keystore>
        <tim.keystore.pw>${env.PROD_KEYSTORE_PW}</tim.keystore.pw>
        <timeout>240</timeout>
        <pollInterval>5</pollInterval>
        <claimDuration>300</claimDuration>
        <soft-filter.to.hard>true</soft-filter.to.hard>
        <cutest.count.format>txt,json</cutest.count.format>
        <skip.saving.reports>true</skip.saving.reports>
      </properties>
    </profile>
    <profile>
      <id>disable-prepare-items</id>
      <activation>
        <property>
          <name>profile.ci</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-items</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>checkApis</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>skip-saving-reports</id>
      <properties>
        <skip.saving.reports>true</skip.saving.reports>
      </properties>
    </profile>
    <profile>
      <id>oneonly</id>
      <properties>
        <feature.tables.max_rows>1</feature.tables.max_rows>
      </properties>
    </profile>
    <profile>
      <id>newonly</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
            <configuration>
              <defaultExamplesTags>
                <defaultExamplesTag>@RequireTag(new)</defaultExamplesTag>
              </defaultExamplesTags>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dont-break-preparation</id>
      <properties>
        <cutest.break.context>false</cutest.break.context>
        <cutest.break.request>false</cutest.break.request>
        <cutest.break.tablesize>false</cutest.break.tablesize>
      </properties>
    </profile>
    <profile>
      <id>polarion-upload</id>
      <properties>
        <testRun>TI-M_Testsuite</testRun>
        <polarion.project>releaseTIMessenger1101</polarion.project>
        <serenityReportsFolderPath>
          ${basedir}/reports/${build.time}/report
        </serenityReportsFolderPath>
      </properties>
      <build>
        <plugins>
          <!--      Done with "cp" to keep timestamp-->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <skip>${skip.saving.reports}</skip>
            </configuration>
            <executions>
              <execution>
                <id>save_reports</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>cp</executable>
                  <arguments>
                    <argument>-a</argument>
                    <argument>${project.build.directory}/site/serenity/.</argument>
                    <argument>${basedir}/reports/${build.time}/report/</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>gematik-polarion-maven-plugin</artifactId>
            <version>${polarion.toolbox.version}</version>
            <executions>
              <execution>
                <id>upload</id>
                <configuration>
                  <username>${env.POLARION_CREDENTIALS_USR}</username>
                  <password>${env.POLARION_CREDENTIALS_PSW}</password>
                  <project>${polarion.project}</project>
                  <testRun>${testRun}</testRun>
                  <serenityReportsFolderPath>
                    ${serenityReportsFolderPath}
                  </serenityReportsFolderPath>
                </configuration>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>upload-testresults</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>polarion-sync</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>gematik-polarion-maven-plugin</artifactId>
            <version>${polarion.toolbox.version}</version>
            <executions>
              <execution>
                <id>parse</id>
                <goals>
                  <goal>parse-bdd</goal>
                </goals>
                <configuration>
                  <pathToBddFiles>${feature.template.dir}</pathToBddFiles>
                  <fileExtension>.cute</fileExtension>
                </configuration>
              </execution>
              <execution>
                <id>sync</id>
                <configuration>
                  <username>${env.POLARION_CREDENTIALS_USR}</username>
                  <password>${env.POLARION_CREDENTIALS_PSW}</password>
                  <luceneQuery>cfInternalId:TIM_11_AF_*</luceneQuery>
                  <project>Mainline_OPB1</project>
                </configuration>
                <goals>
                  <goal>sync-testcases</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--      used to skip saving reports when tests are skipped-->
    <profile>
      <id>skipTests equal skip.saving.reports</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <skip.saving.reports>true</skip.saving.reports>
      </properties>
    </profile>
  </profiles>

  <scm>
    <url>https://github.com/gematik/TI-Messenger-Testsuite</url>
    <connection>scm:git:git://github.com/gematik/TI-Messenger-Testsuite.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:gematik/TI-Messenger-Testsuite.git
    </developerConnection>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/gematik/TI-Messenger-Testsuite/issues</url>
  </issueManagement>

  <organization>
    <name>gematik GmbH</name>
    <url>http://www.gematik.de</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>gematik</name>
      <email>software-development@gematik.de</email>
      <url>https://gematik.github.io/</url>
      <organization>gematik GmbH</organization>
      <organizationUrl>https://www.gematik.de/</organizationUrl>
    </developer>
  </developers>
</project>
