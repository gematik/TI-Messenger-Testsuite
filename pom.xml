<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.gematik.tim.test</groupId>
  <artifactId>TI-Messenger-Testsuite</artifactId>
  <version>0.9.2</version>
  <packaging>jar</packaging>
  <name>TI-Messenger-Testsuite</name>
  <description>Testsuite to check functionality of TI-Messenger-Clients</description>
  <url>https://github.com/gematik/TI-Messenger-Testsuite</url>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco.version>0.8.8</jacoco.version>
    <version.tiger>2.1.1</version.tiger>
    <version.serenity.core>3.6.20</version.serenity.core>
    <polarion.toolbox.version>2.0.0-133</polarion.toolbox.version>
    <feature_dir>${project.build.directory}/features/</feature_dir>
    <feature.template.dir>${project.basedir}/src/test/resources/templates/FeatureFiles/Zulassungstests
    </feature.template.dir>
    <sonar.coverage.exclusions>**/*</sonar.coverage.exclusions>
    <feature.tables.max_rows>9999</feature.tables.max_rows>
    <maven.build.timestamp.format>yyyy-MM-dd_HH_mm_ss</maven.build.timestamp.format>
    <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
    <version.junit.engine>5.8.2</version.junit.engine>
    <maven.javadoc.plugin.version>3.0.1</maven.javadoc.plugin.version>
    <skip.saving.reports>false</skip.saving.reports>
    <tiger.config.file>tiger.yml</tiger.config.file>
    <cutest.combine.break>true</cutest.combine.break>
    <cutest.prepare.break>true</cutest.prepare.break>
    <combine.items.file>${project.basedir}/src/test/resources/combine_items.json</combine.items.file>
    <tim.truststore>${env.TIM_TRUSTSTORE}</tim.truststore>
    <tim.truststore.pw>${env.TIM_TRUSTSTORE_PW}</tim.truststore.pw>
    <tim.keystore>${env.TIM_KEYSTORE}</tim.keystore>
    <tim.keystore.pw>${env.TIM_KEYSTORE_PW}</tim.keystore.pw>
    <cutest.prepare.skip>false</cutest.prepare.skip>
    <cutest.prepare.skipPrepare>false</cutest.prepare.skipPrepare>
    <cutest.prepare.skipCombine>false</cutest.prepare.skipCombine>
    <cutest.prepare.skipCheck>false</cutest.prepare.skipCheck>
    <pool.group.string/>
    <saveConnections/>
    <cucumber.filter.tags/>
    <timeout/>
    <claimDuration/>
    <pollInterval/>
    <cucumber.filter.version/>
  </properties>
  <distributionManagement>
    <repository>
      <id>releases</id>
      <!--suppress UnresolvedMavenProperty -->
      <url>${releaseDeploymentRepository}</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <!--suppress UnresolvedMavenProperty -->
      <url>${snapshotDeploymentRepository}</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-core</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-model</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-cucumber</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-rest-assured</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-screenplay</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-screenplay-rest</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-ensure</artifactId>
        <version>${version.serenity.core}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${version.junit.engine}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>de.gematik.test</groupId>
      <artifactId>tiger-test-lib</artifactId>
      <version>${version.tiger}</version>
    </dependency>
    <dependency>
      <groupId>de.gematik</groupId>
      <artifactId>tiger-cloud-extension</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>net.sf.supercsv</groupId>
      <artifactId>super-csv</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <!-- screenplay -->
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-screenplay-rest</artifactId>
      <version>${version.serenity.core}</version>
    </dependency>
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-ensure</artifactId>
      <version>${version.serenity.core}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>
                https://raw.githubusercontent.com/gematik/api-ti-messenger/9c5d696f999e09e78a4ca64d0c96b4246711a471/src/openapi/TiMessengerTestTreiber.yaml
              </url>
              <md5>4a04bf5d7df98c743482be021b4b1211</md5>
              <outputFileName>TiMessengerTestTreiber.yaml</outputFileName>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <overwrite>true</overwrite>
              <skipCache>true</skipCache>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <debug>true</debug>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <doclint>none</doclint>
          <!--sourcepath>src/main/java</sourcepath--> <!-- falls javadoc via Jenkins nicht erstellt werden kann, die Zeile hinzufÃ¼gen -->
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.gematik</groupId>
        <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
        <version>2.9.6</version>
        <configuration>
          <skip>${cutest.prepare.skip}</skip>
          <skipPrep>${cutest.prepare.skipPrepare}</skipPrep>
          <skipComb>${cutest.prepare.skipCombine}</skipComb>
          <skipCheck>${cutest.prepare.skipCheck}</skipCheck>
          <!--          Global Config-->
          <combineItemsFile>${combine.items.file}</combineItemsFile>
          <!--          Prepare item config-->
          <truststore>${tim.truststore}</truststore>
          <truststorePw>${tim.truststore.pw}</truststorePw>
          <clientCertStore>${tim.keystore}</clientCertStore>
          <clientCertStorePw>${tim.keystore.pw}</clientCertStorePw>
          <hardFail>${cutest.prepare.break}</hardFail>
          <configFail>${cutest.prepare.break}</configFail>
          <poolGroupString>${pool.group.string}</poolGroupString>
          <tagExpressions>
            <tagExpression>
              <tag>client</tag>
              <expression>$.clientInfo.canSendMessages</expression>
            </tagExpression>
            <tagExpression>
              <tag>orgAdmin</tag>
              <expression>$.clientInfo.canAdministrateFhirOrganization</expression>
            </tagExpression>
            <tagExpression>
              <tag>practitioner</tag>
              <expression>$.clientInfo.canAdministrateFhirPractitioner</expression>
            </tagExpression>
          </tagExpressions>
          <propertyExpressions>
            <propertyExpression>
              <property>homeserver</property>
              <expression>$.homeserver</expression>
            </propertyExpression>
            <propertyExpression>
              <property>os</property>
              <expression>$.clientInfo.osInfo.operatingSystem</expression>
            </propertyExpression>
            <propertyExpression>
              <property>company</property>
              <expression>$.contact.name</expression>
            </propertyExpression>
            <propertyExpression>
              <property>testApiVersion</property>
              <expression>$.testDriverVersion</expression>
            </propertyExpression>
            <propertyExpression>
              <property>clientVersion</property>
              <expression>$.clientInfo.version</expression>
            </propertyExpression>
          </propertyExpressions>
          <!--          Check config-->
          <checkPath>devices</checkPath>
          <defaultCheckExpressions>
            ITEM.hasTag("orgAdmin") and ITEM.hasTag("client") ? $.devices.size() >= 4 : ITEM.hasTag("orgAdmin") ? $.devices.size() >= 1 : $.devices.size() >= 3</defaultCheckExpressions>
          <!--          Combine config-->
          <breakIfTableToSmall>${cutest.combine.break}</breakIfTableToSmall>
          <outputDir>${feature_dir}</outputDir>
          <templateDir>${feature.template.dir}</templateDir>
          <filterConfiguration>
            <maxTableRows>${feature.tables.max_rows}</maxTableRows>
          </filterConfiguration>
          <projectFilters>
            <version>${cucumber.filter.version}</version>
          </projectFilters>
          <versionProperty>clientVersion</versionProperty>
        </configuration>

        <executions>
          <execution>
            <id>prepare-items</id>
            <goals>
              <goal>prepare-items</goal>
            </goals>
          </execution>
          <execution>
            <id>checkApis</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
          <execution>
            <id>combine-items</id>
            <goals>
              <goal>prepare-combine</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.gematik.test</groupId>
        <artifactId>tiger-maven-plugin</artifactId>
        <version>${version.tiger}</version>
        <executions>
          <execution>
            <configuration>
              <skip>false</skip>
              <featuresDir>${feature_dir}</featuresDir>
              <includes>
                <include>**/*.feature</include>
              </includes>
              <glues>
                <glue>de.gematik.test.tiger.hooks</glue>
                <glue>de.gematik.test.tiger.glue</glue>
                <glue>de.gematik.tim.test.glue</glue>
              </glues>
              <driverPackage>
                de.gematik.tim.test.drivers
              </driverPackage>
              <!-- optional -->
              <!--suppress UnresolvedMavenProperty -->
              <driverClassName>Parallel${ctr}IT</driverClassName>
            </configuration>
            <id>default-sources</id>
            <goals>
              <goal>generate-drivers</goal>
              <goal>generate-serenity-reports</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M6</version>
        <configuration>
          <environmentVariables>
            <TIGER_TESTENV_CFGFILE>${tiger.config.file}</TIGER_TESTENV_CFGFILE>
          </environmentVariables>
          <systemPropertyVariables>
            <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
          </systemPropertyVariables>
          <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>6.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.build.directory}/TiMessengerTestTreiber.yaml
              </inputSpec>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <generatorName>java</generatorName>
              <modelPackage>de.gematik.tim.test.models</modelPackage>
              <modelNameSuffix>DTO</modelNameSuffix>
              <generateApis>false</generateApis>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>false</generateSupportingFiles>
              <configOptions>
                <library>resttemplate</library>
                <serializationLibrary>jackson</serializationLibrary>
                <dateLibrary>java8</dateLibrary>
                <sourceFolder>src/generated/java/main</sourceFolder>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>local-timestamp-property</id>
            <phase>validate</phase>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <configuration>
              <name>build.time</name>
              <pattern>${maven.build.timestamp.format}</pattern>
              <locale>de_DE</locale>
              <timeZone>Europe/Berlin</timeZone>
              <timeSource>build</timeSource>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${feature_dir}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <skip>${skip.saving.reports}</skip>
        </configuration>
        <executions>
          <execution>
            <id>save_reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/report</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/site/serenity</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save_raw-data-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/raw-data</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-raw-data</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save_features</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/features</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/features</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>save_combine-item</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/reports/${build.time}/combine_items</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-combine</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>copy-file</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${basedir}/reports/${build.time}/report/index.html</sourceFile>
              <destinationFile>${basedir}/reports/${build.time}/report/#index.html</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete dir="${project.build.directory}/generated-combine"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.outputDirectory}/mvn.properties</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <id>ci-pipeline</id>
      <activation>
        <property>
          <name>profile.ci</name>
        </property>
      </activation>
      <properties>
        <feature.tables.max_rows>1</feature.tables.max_rows>
        <skip.saving.reports>true</skip.saving.reports>
        <combine.items.file>${project.basedir}/src/test/resources/combine_items_ci.json
        </combine.items.file>
        <saveConnections>true</saveConnections>
        <tiger.config.file>tiger-ci.yml</tiger.config.file>
        <runWithoutRetry>true</runWithoutRetry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>de.gematik.tim.test</groupId>
                  <artifactId>TI-Messenger-TestdriverSim</artifactId>
                  <version>4.1.1</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>testdriverSim.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <combine.items.file>${project.basedir}/src/test/resources/combine_items_prod.json
        </combine.items.file>
        <tiger.config.file>tiger-prod.yml</tiger.config.file>
        <tim.truststore>${project.basedir}/src/main/resources/certs/gemRoot/cert/gem/gemTruststore.p12</tim.truststore>
        <tim.truststore.pw>changeit</tim.truststore.pw>
        <tim.keystore>${project.basedir}/src/main/resources/certs/gemRoot/cert/gem/gemKeystore.p12</tim.keystore>
        <tim.keystore.pw>changeit</tim.keystore.pw>
        <timeout>240</timeout>
        <pollInterval>5</pollInterval>
        <claimDuration>300</claimDuration>
      </properties>
    </profile>
    <profile>
      <id>disable-prepare-items</id>
      <activation>
        <property>
          <name>profile.ci</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-items</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>checkApis</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dev</id>
      <properties>
        <tiger.config.file>tiger-dev.yml</tiger.config.file>
        <runWithoutRetry>true</runWithoutRetry>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>skip-saving-reports</id>
      <properties>
        <skip.saving.reports>true</skip.saving.reports>
      </properties>
    </profile>
    <profile>
      <id>save-connections</id>
      <properties>
        <saveConnections>true</saveConnections>
      </properties>
    </profile>
    <profile>
      <id>oneonly</id>
      <properties>
        <feature.tables.max_rows>1</feature.tables.max_rows>
      </properties>
    </profile>
    <profile>
      <id>usetags</id>
      <properties>
        <cucumber.filter.tags>@Ctl:UseCase</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>newonly</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>cucumber-test-combinations-maven-plugin</artifactId>
            <configuration>
              <defaultExamplesTags>
                <defaultExamplesTag>@RequireTag(new)</defaultExamplesTag>
              </defaultExamplesTags>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>external</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.7</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dont-break-preperation</id>
      <properties>
        <cutest.combine.break>false</cutest.combine.break>
        <cutest.prepare.break>false</cutest.prepare.break>
      </properties>
    </profile>
    <profile>
      <id>polarion-upload</id>
      <properties>
        <testRun>testruns</testRun>
        <polarion.project>releaseTIMessenger1101</polarion.project>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>gematik-polarion-maven-plugin</artifactId>
            <version>${polarion.toolbox.version}</version>
            <executions>
              <execution>
                <configuration>
                  <username>${env.POLARION_CREDENTIALS_USR}</username>
                  <password>${env.POLARION_CREDENTIALS_PSW}</password>
                  <project>${polarion.project}</project>
                  <testRun>${testRun}</testRun>
                  <serenityReportsFolderPath>${basedir}/reports/${build.time}/report</serenityReportsFolderPath>
                </configuration>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>upload-testresults</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>polarion-sync</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.gematik</groupId>
            <artifactId>gematik-polarion-maven-plugin</artifactId>
            <version>${polarion.toolbox.version}</version>
            <executions>
              <execution>
                <id>parse</id>
                <goals>
                  <goal>parse-bdd</goal>
                </goals>
                <configuration>
                  <pathToBddFiles>${feature.template.dir}</pathToBddFiles>
                  <fileExtension>.cute</fileExtension>
                </configuration>
              </execution>
              <execution>
                <id>sync</id>
                <configuration>
                  <username>${env.POLARION_CREDENTIALS_USR}</username>
                  <password>${env.POLARION_CREDENTIALS_PSW}</password>
                  <luceneQuery>cfInternalId:TIM_11_AF_*</luceneQuery>
                  <project>Mainline_OPB1</project>
                </configuration>
                <goals>
                  <goal>sync-testcases</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <scm>
    <url>https://github.com/gematik/TI-Messenger-Testsuite</url>
    <connection>scm:git:git://github.com/gematik/TI-Messenger-Testsuite.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:gematik/TI-Messenger-Testsuite.git
    </developerConnection>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/gematik/TI-Messenger-Testsuite/issues</url>
  </issueManagement>

  <organization>
    <name>gematik GmbH</name>
    <url>http://www.gematik.de</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>gematik</name>
      <email>software-development@gematik.de</email>
      <url>https://gematik.github.io/</url>
      <organization>gematik GmbH</organization>
      <organizationUrl>https://www.gematik.de/</organizationUrl>
    </developer>
  </developers>


</project>
