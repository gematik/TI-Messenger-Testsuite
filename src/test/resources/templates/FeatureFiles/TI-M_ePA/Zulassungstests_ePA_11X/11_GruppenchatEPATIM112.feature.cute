# language: de
@File:FeatureFile_08_ePA
@PRODUKT:TIM_ePA_11X
@AF-ID:AF_10062-02

Funktionalität:  12. Gruppenchat

    #Muss noch angepasst werden
  AF_10062-02 - Austausch von Events zwischen Akteuren außerhalb einer Organisation

  Inhalt
  TF 1       Versichertenkommunikation - Versicherter lädt 2. Versicherten in Raum mit HBA User ein (Negativ) (AllowAll)
  TF 2       Versichertenkommunikation - Versicherter lädt 2. HBA User in Raum ein (AllowAll)
  TF 3       Versichertenkommunikation - Versicherter lädt 2. Versicherten in Raum mit OrgUser ein (Negativ) (AllowAll)
  TF 4       Versichertenkommunikation - Versicherter lädt 2. OrgUser in Raum ein (AllowAll)
  TF 5       Versichertenkommunikation - HBA User lädt 2. HBA User in Raum ein (AllowAll)
  TF 6       Versichertenkommunikation - OrgUser lädt 2. OrgUser in Raum ein (AllowAll)
  TF 7       Versichertenkommunikation - Versicherter lädt 2. Versicherten in Raum mit HBA User ein (Negativ) (BlockAll)
  TF 8       Versichertenkommunikation - Versicherter lädt 2. HBA User in Raum ein (BlockAll)
  TF 9       Versichertenkommunikation - Versicherter lädt 2. Versicherten in Raum mit OrgUser ein (Negativ) (BlockAll)
  TF 10      Versichertenkommunikation - Versicherter lädt 2. OrgUser in Raum ein (BlockAll)
  TF 11      Versichertenkommunikation - HBA User lädt 2. HBA User in Raum ein (BlockAll)
  TF 12      Versichertenkommunikation - OrgUser lädt 2. OrgUser in Raum ein (BlockAll)

  @TCID:TIM_ePA_AF_1101 @PRIO:1 @TESTFALL:Negativ @STATUS:Zurückgestellt
  Szenariogrundriss: 11.01 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Versicherten in Raum mit HBA-User ein (Versicherter an Versicherten)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | INSURANT     | <ApiName3> |
    Und        "A","C" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B" hinterlegt "A" in seiner Freigabeliste
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "A" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       erhält "A" einen Responsecode 403
    Und        "C" erhält KEINE Einladung von "A" [Retry 10 - 3]
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "B" löscht "A" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("insurant"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1102 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.02 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. HBA User in Raum HBA-User ein (Versicherter an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | PRACTITIONER | <ApiName3> |
    Und        "A" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B" hinterlegt "A" in seiner Freigabeliste
    Und        "C" hinterlegt "A" in seiner Freigabeliste
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "A" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "A"
    Und        "C" bestätigt eine Einladung von "A"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "B" löscht "A" in seiner Freigabeliste
    Und        "C" löscht "A" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1103 @PRIO:1 @TESTFALL:Negativ @STATUS:Zurückgestellt
  Szenariogrundriss: 11.03 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Versicherten in Raum mit Org-User ein (Versicherter an Versicherten)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | INSURANT     | <ApiName3>  |
    Und        "A","D" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "C" hinterlegt "B" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       erhält "B" einen Responsecode 403
    Und        "D" erhält KEINE Einladung von "B" [Retry 10 - 3]
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "C" löscht "B" in seiner Freigabeliste


  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))
    @Filter(ApiName3.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1104 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.04 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Org-User in Raum mit Org-User ein (Versicherter an Org-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | CLIENT       | <ApiName1C> |
    Und        "B" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "C" hinterlegt "B" in seiner Freigabeliste
    Und        "D" hinterlegt "B" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName2" und setzen einen Endpunkt auf "D"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       "D" erhält eine Einladung von "B"
    Und        "D" bestätigt eine Einladung von "B"
    Und        "D" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "D" im Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "D" im Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "D" verlässt Raum "TIM Testraum 1"
    Und        "C" löscht "B" in seiner Freigabeliste
    Und        "D" löscht "C" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1C.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName1C.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName1C | ApiName2 |

  @TCID:TIM_ePA_AF_1105 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.05 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - HBA User lädt 2. HBA User in Raum mit Versicherten ein (HBA-User an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | PRACTITIONER | <ApiName3> |
    Und        "A" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B", "C" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "A" in Chat-Raum "TIM Testraum 1" ein
    Dann       "A" erhält eine Einladung von "B"
    Und        "A" bestätigt eine Einladung von "B"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1106 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.06 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Org-User lädt 2. Org-User in Raum mit Versicherten ein (Org-User an Org-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | CLIENT       | <ApiName1C>  |
    Und        "B" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "D"
    Und        "C" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "C" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "C"
    Und        "B" bestätigt eine Einladung von "C"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       "D" erhält eine Einladung von "B"
    Und        "D" bestätigt eine Einladung von "B"
    Und        "D" sendet die Nachricht "Testnachricht 2" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 2" von "D" im Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 2" von "D" im Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "D" verlässt Raum "TIM Testraum 1"

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1C.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName1C.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName1C | ApiName2 |

  @TCID:TIM_ePA_AF_1107 @PRIO:1 @TESTFALL:Negativ @STATUS:Zurückgestellt
  Szenariogrundriss: 11.07 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Versicherten in Raum mit HBA-User ein (Versicherter an Versicherten)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | INSURANT     | <ApiName3> |
    Und        "A", "C" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "A", "C" setzt seinen Authorization Mode auf "BlockAll"
    Und        "A" hinterlegt "B", "C" in der Allowliste
    Und        "C" hinterlegt "A", "B" in der Allowliste
    Und        "B" hinterlegt "A" in seiner Freigabeliste
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "A" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       erhält "A" einen Responsecode 403
    Und        "C" erhält KEINE Einladung von "A" [Retry 10 - 3]
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "B" löscht "A" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("insurant"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |


  @TCID:TIM_ePA_AF_1108 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.08 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. HBA User in Raum HBA-User ein (Versicherter an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | PRACTITIONER | <ApiName3> |
    Und        "A" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "A" setzt seinen Authorization Mode auf "BlockAll"
    Und        "A" hinterlegt "B", "C" in der Allowliste
    Und        "B" hinterlegt "A" in seiner Freigabeliste
    Und        "C" hinterlegt "A" in seiner Freigabeliste
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "A" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "A"
    Und        "C" bestätigt eine Einladung von "A"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "B" löscht "A" in seiner Freigabeliste
    Und        "C" löscht "A" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1109 @PRIO:1 @TESTFALL:Negativ @STATUS:Zurückgestellt
  Szenariogrundriss: 11.09 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Versicherten in Raum mit Org-User ein (Versicherter an Versicherten)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | INSURANT     | <ApiName3>  |
    Und        "B","D" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B", "D" setzt seinen Authorization Mode auf "BlockAll"
    Und        "B" hinterlegt "C", "D" in der Allowliste
    Und        "D" hinterlegt "B", "C" in der Allowliste
    Und        "C" hinterlegt "B" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       erhält "B" einen Responsecode 403
    Und        "D" erhält KEINE Einladung von "B" [Retry 10 - 3]
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "C" löscht "B" in seiner Freigabeliste


  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))
    @Filter(ApiName3.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1110 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.10 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Versicherter lädt 2. Org-User in Raum mit Org-User ein (Versicherter an Org-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | CLIENT       | <ApiName1C> |
    Und        "B" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B" setzt seinen Authorization Mode auf "BlockAll"
    Und        "B" hinterlegt "C", "D" in der Allowliste
    Und        "C" hinterlegt "B" in seiner Freigabeliste
    Und        "D" hinterlegt "B" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName2" und setzen einen Endpunkt auf "D"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       "D" erhält eine Einladung von "B"
    Und        "D" bestätigt eine Einladung von "B"
    Und        "D" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "D" im Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "D" im Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "D" verlässt Raum "TIM Testraum 1"
    Und        "C" löscht "B" in seiner Freigabeliste
    Und        "D" löscht "C" in seiner Freigabeliste

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1C.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName1C.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName1C | ApiName2 |

  @TCID:TIM_ePA_AF_1111 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.11 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - HBA User lädt 2. HBA User in Raum mit Versicherten ein (HBA-User an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | INSURANT     | <ApiName1> |
      | B | PRACTITIONER | <ApiName2> |
      | C | PRACTITIONER | <ApiName3> |
    Und        "A" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "A" setzt seinen Authorization Mode auf "BlockAll"
    Und        "A" hinterlegt "B", "C" in der Allowliste
    Und        "B", "C" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "A" in Chat-Raum "TIM Testraum 1" ein
    Dann       "A" erhält eine Einladung von "B"
    Und        "A" bestätigt eine Einladung von "B"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "A" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "A" verlässt Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @Filter(!ApiName1.properties["homeserver"].equals(ApiName3.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName3.hasTag("client"))
    @Filter(ApiName1.hasTag("insurant"))
    @Filter(ApiName2.hasTag("practitioner"))
    @Filter(ApiName3.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 | ApiName3 |

  @TCID:TIM_ePA_AF_1112 @PRIO:1 @TESTFALL:Positiv @STATUS:Zurückgestellt
  Szenariogrundriss: 11.12 TI-M ePA - Versichertenkommunikation via Freigabeliste außerhalb einer Organisation - Raum - Org-User lädt 2. Org-User in Raum mit Versicherten ein (Org-User an Org-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | INSURANT     | <ApiName2>  |
      | C | CLIENT       | <ApiName1B> |
      | D | CLIENT       | <ApiName1C>  |
    Und        "B" prüft, ob seinen Authorization Mode auf "AllowAll" gesetzt ist
    Und        "B" setzt seinen Authorization Mode auf "BlockAll"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "C"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "D"
    Und        "B" hinterlegt "C", "D" in der Allowliste
    Und        "C" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "C" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung von "C"
    Und        "B" bestätigt eine Einladung von "C"
    Und        "B" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "B" im Raum "TIM Testraum 1"
    Wenn       "B" lädt "D" in Chat-Raum "TIM Testraum 1" ein
    Dann       "D" erhält eine Einladung von "B"
    Und        "D" bestätigt eine Einladung von "B"
    Und        "D" sendet die Nachricht "Testnachricht 2" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 2" von "D" im Raum "TIM Testraum 1"
    Und        "C" empfängt eine Nachricht "Testnachricht 2" von "D" im Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "D" verlässt Raum "TIM Testraum 1"

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1C.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName1C.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("insurant"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName1C | ApiName2 |