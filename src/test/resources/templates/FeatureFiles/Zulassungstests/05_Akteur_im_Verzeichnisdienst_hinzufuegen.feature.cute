# language: de
@File:FeatureFile_05 @Ctl:UseCase
@PRODUKT:TIM_FD @PRODUKT:TIM_Client
@AF-ID:AF_10058
@AK-ID:ML-123612 @AK-ID:ML-123611 @AK-ID:ML-132588
Funktionalität:  05. Akteur (User-HBA) im Verzeichnisdienst hinzufügen

  AF_10058 Akteur (User-HBA) im Verzeichnisdienst hinzufügen
    ML-123612 - Akteur als Practitioner hinzufügen
    ML-123611 - MXID-Eintrag nur für eigenen Practitioner-FHIR-Datensatz
    ML-132588 - TI-M Rohdatenerfassung und -lieferung

  Inhalt
  TF 1 & 2 User im VZD hinzufügen
  TF 3     User im VZD hinzufügen und Suche aus anderer Organisation
  TF 4 & 5 User im VZD löschen
  TF 6     Negativ-Tests User hinzufügen

  @Ctl:OneHomeServer
  @TCID:TIM_11_AF_501 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.1 Akteur im Verzeichnisdienst - Hinzufügen - HBA-User legt sich an und sucht seinen Eintrag
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1>
    Und        "A" hinterlegt seine MXID im Verzeichnis Dienst
    Wenn       "A" sucht die MXID des Benutzers "A" im Verzeichnis Dienst
    Dann       "A" findet seine MXID im Verzeichnis Dienst

  @Filter(ApiName1.hasTag("client"))
  @Filter(ApiName1.hasTag("practitioner"))

    Beispiele:
    | ApiName1 |

  @Ctl:OneHomeServer
  @TCID:TIM_11_AF_502 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.2 Akteur im Verzeichnisdienst - Hinzufügen - HBA-User legt sich an und sucht anderen Eintrag
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1A>
    Und        "B" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1B>
    Und        "A", "B" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Wenn       "A" sucht die MXID des Benutzers "A" im Verzeichnis Dienst
    Und        "A" findet seine MXID im Verzeichnis Dienst
    Dann       "A" findet "B" in FHIR

  @Shuffle(true) #
  @DistinctColumn(ApiName1A) #
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1A.hasTag("client"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1A.hasTag("practitioner"))
  @Filter(ApiName1B.hasTag("practitioner"))

    Beispiele:
    | ApiName1A | ApiName1B |

  @TCID:TIM_11_AF_503 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.3 Akteur im Verzeichnisdienst - Hinzufügen - HBA-User aus anderer Organisation sucht HBA-User Eintrag
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1>
    Und        "B" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName2>
    Und        "A", "B" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Wenn       "A" sucht die MXID des Benutzers "A" im Verzeichnis Dienst
    Und        "A" findet seine MXID im Verzeichnis Dienst
    Dann       "B" findet "A" in FHIR

  @Shuffle(true) #
  #@DistinctColumn(ApiName2) #
  @MaxSameColumnProperty(ApiName2,homeserver,1) #
  @DistinctProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1.hasTag("client"))
  @Filter(ApiName2.hasTag("client"))
  @Filter(ApiName1.hasTag("practitioner"))
  @Filter(ApiName2.hasTag("practitioner"))
  #@Filter(ApiName1.hasTag("prefIOP"))
  #@Filter(ApiName2.hasTag("prefIOP"))

    Beispiele:
    | ApiName1 | ApiName2 |

  @Ctl:OneHomeServer
  @TCID:TIM_11_AF_504 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.4 Akteur im Verzeichnisdienst - Löschen - HBA-User löscht Eintrag und ist nicht auffindbar für HBA-User gleicher Organisation
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1A>
    Und        "B" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1B>
    Und        "A", "B" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Wenn       "A" löscht seine MXID im Verzeichnis Dienst
    Dann       "B" kann "A" nicht mehr finden in FHIR [Retry 11 - 5]

  @Shuffle(true) ##
  @DistinctColumn(ApiName1A) ##
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1A.hasTag("client"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1A.hasTag("practitioner"))
  @Filter(ApiName1B.hasTag("practitioner"))

    Beispiele:
    | ApiName1A | ApiName1B |

  @TCID:TIM_11_AF_505 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.5 Akteur im Verzeichnisdienst - Löschen - HBA-User löscht Eintrag und ist nicht auffindbar für HBA-User anderer Organisation
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1>
    Und        "B" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName2>
    Und        "A", "B" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Wenn       "A" löscht seine MXID im Verzeichnis Dienst
    Dann       "B" kann "A" nicht mehr finden in FHIR [Retry 11 - 5]

  @Shuffle(true) #
  #@DistinctColumn(ApiName2) #
  @MaxSameColumnProperty(ApiName1,homeserver,1) #
  @DistinctProperty(homeserver)
  @AllowSelfCombine(false)
  @AllowDoubleLineup(true)
  @Filter(ApiName1.hasTag("client"))
  @Filter(ApiName2.hasTag("client"))
  @Filter(ApiName1.hasTag("practitioner"))
  @Filter(ApiName2.hasTag("practitioner"))
  #@Filter(ApiName1.hasTag("prefIOP"))
  #@Filter(ApiName2.hasTag("prefIOP"))

    Beispiele:
    | ApiName1 | ApiName2 |

  @Ctl:OneHomeServer
  @TCID:TIM_11_AF_506 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 05.6 Akteur im Verzeichnisdienst - Hinzufügen - Nicht erfolgreich ohne Authencitation im Verzeichnisdienst
    Angenommen "A" reserviert sich einen Practitioner-Client an Schnittstelle <ApiName1>
    Wenn       "A" versucht seine MXID im Verzeichnis Dienst ohne Authencitation zu hinterlegen
    Dann       erhält "A" einen Responsecode 401

  @Filter(ApiName1.hasTag("client"))
  @Filter(ApiName1.hasTag("practitioner"))

    Beispiele:
    | ApiName1 |
