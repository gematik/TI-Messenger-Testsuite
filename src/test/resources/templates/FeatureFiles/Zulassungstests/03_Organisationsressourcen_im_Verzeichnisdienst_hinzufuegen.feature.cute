# language: de
@File:FeatureFile_03 @Ctl:UseCase @Ctl:OneHomeServer
@PRODUKT:TIM_FD @PRODUKT:TIM_Client
@AF-ID:AF_10059
@AK-ID:ML-123626 @AK-ID:ML-123627 @AK-ID:ML-132586
Funktionalität: 03. Organisationsressourcen im Verzeichnisdienst hinzufügen

  AF_10059 - Organisationsressourcen im Verzeichnisdienst hinzufügen
    ML-123626 - Änderungen nur für eigene Organization-FHIR-Datensätze
    ML-123627 - Organisationsressourcen im VZD-FHIR-Directory hinzufügen
    ML-132586 - TI-M Rohdatenerfassung und -lieferung

  Mit diesem Anwendungsfall werden Healthcare-Services anlegen, geändert und gelöscht (löschen wird bei den TFs 1 & 2
  implizit mit getestet).

  Inhalt
  TF 1 Healthcare Service anlegen
  TF 2 Healthcare Service MXID im Endpoint ändern
  TF 3 Healthcare Service anlegen/ändern, Endpoint anlegen/ändern und löschen
  TF 4 Healthcare Service anlegen, zwei Endpoints anlegen und löschen
  TF 5 Healthcare Service Endpointname aktualisieren

  @BP:P2O @Ctl:OrgAdmin
  @TCID:TIM_11_AF_301 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 03.01 Organisationsressourcen im Verzeichnisdienst hinzufügen - Healthcare-Service durch Org-Admin anlegen
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | CLIENT       | <ApiName1B> |
      | C | PRACTITIONER | <ApiName1C> |
    Und        "C" hinterlegen ihre MXIDs im Verzeichnis Dienst
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Wenn       "C" schreibt "B" über den Healthcare-Service "HealthcareServiceName" direkt "Testnachricht 1"
    Und        "B" bestätigt eine Einladung von "C"
    Dann       "B" empfängt eine Nachricht "Testnachricht 1" von "C"
    Und        "C" schreibt "B" direkt "Testnachricht 2"
    Und        "B" empfängt eine Nachricht "Testnachricht 2" von "C"

  @Shuffle(true) ##
  @DistinctColumn(ApiName1B) ##
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1A.hasTag("orgAdmin"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1C.hasTag("client"))
  @Filter(ApiName1C.hasTag("practitioner"))

    Beispiele:
    | ApiName1A | ApiName1B | ApiName1C |

  @BP:N2O @Ctl:OrgAdmin
  @TCID:TIM_11_AF_302 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 03.02 Organisationsressourcen im Verzeichnisdienst hinzufügen - Healthcare-Service durch Org-Admin anlegen und MXID im Endpoint ändern
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
      | C | CLIENT    | <ApiName1C> |
      | D | CLIENT    | <ApiName1D> |
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Und        "D" schreibt "B" über den Healthcare-Service "HealthcareServiceName" direkt "Testnachricht 1"
    Und        "B" bestätigt eine Einladung von "D"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "D"
    Und        "D" schreibt "B" direkt "Testnachricht 2"
    Und        "B" empfängt eine Nachricht "Testnachricht 2" von "D"
    Wenn       "A" ändert den Endpunkt des Healthcare-Services "HealthcareServiceName" auf "C"
    Dann       "D" schreibt "C" über den Healthcare-Service "HealthcareServiceName" direkt "Testnachricht 1"
    Und        "C" bestätigt eine Einladung von "D"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "D"
    Und        "D" schreibt "C" direkt "Testnachricht 2"
    Und        "C" empfängt eine Nachricht "Testnachricht 2" von "D"

  @Shuffle(true)
  @MaxSameColumnProperty(ApiName1C,homeserver,2) #
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(false)
  @Filter(ApiName1A.hasTag("orgAdmin"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1C.hasTag("client"))
  @Filter(ApiName1D.hasTag("client"))

    Beispiele:
    | ApiName1A | ApiName1B | ApiName1C | ApiName1D |


  @Ctl:OrgAdmin
  @TCID:TIM_11_AF_303 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 03.03 Organisationsressourcen im Verzeichnisdienst hinzufügen - Healthcare-Service durch Org-Admin anlegen/ändern, Endpoint anlegen/ändern und löschen
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName"
    Wenn       "A" ändert die Daten des Healthcare-Service "HealthcareServiceName" mit JSON "03_AenderungEinesHealthcareService.json"
    Dann       vergleicht "A" den Healthcare-Service "HealthcareServiceName" mit dem JSON "03_AenderungEinesHealthcareService.json"
    Wenn       "A" erstellt Endpunkt für "B" auf Healthcare-Service "HealthcareServiceName"
    Und        "A" ändert den Endpunkt von "B" im Healthcare-Service "HealthcareServiceName" mit dem JSON "03_AenderungEndpointFuerHealthcareService.json"
    Dann       entspricht der Endpunkt von "B" im Healthcare-Service "HealthcareServiceName" dem JSON "03_AenderungEndpointFuerHealthcareService.json"
    Wenn       "A" löscht den Endpoint von "B" für den Healthcare-Service "HealthcareServiceName"
    Dann       existiert kein Endpoint von "B" für den Healthcare-Service "HealthcareServiceName" [Retry 10 - 3]
    Wenn       "A" löscht den Healthcare-Service "HealthcareServiceName"
    Dann       existiert der zuletzt gelöschte Healthcare-Service nicht mehr [Retry 10 - 3]

  @Shuffle(true) #
  @MaxSameColumnProperty(ApiName1B,homeserver,2) #
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1A.hasTag("orgAdmin"))
  @Filter(ApiName1B.hasTag("client"))

    Beispiele:
    | ApiName1A | ApiName1B |


  @Ctl:OrgAdmin
  @TCID:TIM_11_AF_304 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 03.04 Organisationsressourcen im Verzeichnisdienst hinzufügen - Healthcare-Service durch Org-Admin mit zwei Endpoints anlegen und löschen
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
      | C | CLIENT    | <ApiName1C> |
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName"
    Wenn       "A" erstellt Endpunkt für "B" auf Healthcare-Service "HealthcareServiceName"
    Wenn       "A" erstellt Endpunkt für "C" auf Healthcare-Service "HealthcareServiceName"
    Dann       "A" sieht, dass "B", "C" je einen Endpunkt im Healthcare-Service "HealthcareServiceName" haben
    Wenn       "A" löscht den Endpoint von "B" für den Healthcare-Service "HealthcareServiceName"
    Dann       existiert kein Endpoint von "B" für den Healthcare-Service "HealthcareServiceName" [Retry 10 - 3]
    Und        "A" sieht, dass "C" genau einen Endpunkt im Healthcare-Service "HealthcareServiceName" hat
    Wenn       "A" löscht den Endpoint von "C" für den Healthcare-Service "HealthcareServiceName"
    Dann       existiert kein Endpoint von "C" für den Healthcare-Service "HealthcareServiceName" [Retry 10 - 3]
    Wenn       "A" löscht den Healthcare-Service "HealthcareServiceName"
    Dann       existiert der zuletzt gelöschte Healthcare-Service nicht mehr [Retry 10 - 3]

  @Shuffle(true) #
  @MaxSameColumnProperty(ApiName1C,homeserver,2) #
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(true)
  @Filter(ApiName1A.hasTag("orgAdmin"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1C.hasTag("client"))

    Beispiele:
    | ApiName1A | ApiName1B | ApiName1C |

  @BP:N2O @Ctl:OrgAdmin
  @TCID:TIM_11_AF_305 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 03.05 Organisationsressourcen im Verzeichnisdienst hinzufügen - Healthcare-Service durch Org-Admin anlegen und Endpointname aktualisieren
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
      | C | CLIENT    | <ApiName1C> |
    Und "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Und "C" findet "B" im Healthcare-Service "HealthcareServiceName"
    Wenn "A" ändert den Endpunktname von "B" des Healthcare-Services "HealthcareServiceName"
    Dann "C" findet "B" im Healthcare-Service "HealthcareServiceName"

  @Shuffle(true)
  @MaxSameColumnProperty(ApiName1C,homeserver,2) #
  @EqualProperty(homeserver)
  @AllowSelfCombine(true)
  @AllowDoubleLineup(false)
  @Filter(ApiName1A.hasTag("orgAdmin"))
  @Filter(ApiName1B.hasTag("client"))
  @Filter(ApiName1C.hasTag("client"))

    Beispiele:
    | ApiName1A | ApiName1B | ApiName1C |
