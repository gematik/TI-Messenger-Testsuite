# language: de
@File:FeatureFile_11_OrgOnly @Ctl:Freigabeliste
@PRODUKT:TIM_FD @PRODUKT:TIM_Client
@AF-ID:AF_10061-01
@AK-ID:ML-123654 @AK-ID:ML-123663 @AK-ID:ML-132864 @AK-ID:ML-132592
@AF-ID:AF_10064-01
@AK-ID:ML-123672 @AK-ID:ML-123891 @AK-ID:ML-132589 @AK-ID:ML-137902
Funktionalität: 11. Einladung von Akteuren via Freigabeliste_OrgOnly

  Die folgenden Testfälle sollen die Funktionalität der Freigabeliste zur Einladung von Akteuren sicher stellen,
  die nicht weiter in der Spezifikationen des TI-Messengers beschrieben sind aber trotzdem für den Betrieb des
  TI-Messenger-Dienst wichtig sind. Siehe auch Berechtigungskonzept - Stufe 2:
  In dieser Stufe prüft der Messenger-Proxy des Einzuladenden auf eine vorliegende Freigabe. Hierbei
  handelt es sich um eine Lookup-Table, in der alle erlaubten Akteure hinterlegt sind, von denen man
  eine Einladung in einen Chatraum akzeptiert. Ist ein Eintrag vom einladenden Akteur vorhanden, dann
  MUSS die beabsichtigte Einladung des Akteurs zugelassen werden. Ist dies nicht der Fall, MUSS die
  weitere Überprüfung gemäß der 3. Stufe erfolgen.

  AF_10061-01 - Einladung von Akteuren außerhalb einer Organisation
  ML-123654 - Suche im VZD-FHIR-Directory
  ML-123663 - Akteure sind dem Chatraum beigetreten
  ML-132864 - Berechtigungsprüfung aller Stufen
  ML-132592 - TI-M Rohdatenerfassung und -lieferung

  AF_10064-01 - Föderationszugehörigkeit eines Messenger-Service prüfen
  ML-123672 - Föderationsliste vom VZD-FHIR-Directory abrufen
  ML-123891 - Matrix-Domain Teil der Föderationsliste & Aktualitätscheck
  ML-132589 - TI-M Rohdatenerfassung und -lieferung
  ML-137902 - Aktualität - Föderationsliste Messenger-Proxy

  TF 1     OrgUser lädt HBA via Freigabeliste in Raum ein
  TF 2 - 3 Negativ-Tests für die Freigabeliste (OrgUser)

  @BP:FL @Ctl:OrgOnly
    @TCID:TIM_11_AF_11101 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 111.01 Einladung via Freigabeliste außerhalb einer Organisation - Raum - Beide User jeweils in Freigabeliste (Org-User an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | CLIENT       | <ApiName1B> |
      | C | PRACTITIONER | <ApiName2>  |
    Und        "B" hinterlegt "C" in seiner Freigabeliste
    Und        "C" hinterlegt "B" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" in Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" sendet die Nachricht "Testnachricht 1" an den Raum "TIM Testraum 1"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "C" im Raum "TIM Testraum 1"
    Und        "B" verlässt Raum "TIM Testraum 1"
    Und        "C" verlässt Raum "TIM Testraum 1"
    Und        "B" löscht "C" in seiner Freigabeliste
    Und        "C" löscht "B" in seiner Freigabeliste

  #@Shuffle(true)
  #@DistinctColumn(ApiName1B)
  #@MaxSameColumnProperty(ApiName1B,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @AllowSelfCombine(true)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("practitioner"))
    @SoftFilter(ApiName1B.hasTag("prefIOP"))
    @SoftFilter(ApiName2.hasTag("prefIOP"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |

  @BP:FL @Ctl:OrgOnly
    @TCID:TIM_11_AF_11102 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 111.02 Einladung via Freigabeliste außerhalb einer Organisation - Raum - Nur ein User in Freigabeliste (HBA-User an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | CLIENT       | <ApiName1B> |
      | C | PRACTITIONER | <ApiName2>  |
    Und        "B" hinterlegt "C" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" versucht "C" in Chat-Raum "TIM Testraum 1" einzuladen
    Dann       "B" ist nicht berechtigt "C" zu kontaktieren
    Und        "C" erhält KEINE Einladung von "B" für den Raum "TIM Testraum 1" [Retry 10 - 3]
    Und        "B" löscht "C" in seiner Freigabeliste

  #@Shuffle(true)
  #@DistinctColumn(ApiName1B)
  #@MaxSameColumnProperty(ApiName1B,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("practitioner"))
    @SoftFilter(ApiName1B.hasTag("prefIOP"))
    @SoftFilter(ApiName2.hasTag("prefIOP"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |

  @BP:FL @Ctl:OrgOnly
    @TCID:TIM_11_AF_11103 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 111.03 Einladung via Freigabeliste außerhalb einer Organisation - Chat - Nur User in eigener Freigabeliste (HBA-User an HBA-User)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN    | <ApiName1A> |
      | B | CLIENT       | <ApiName1B> |
      | C | PRACTITIONER | <ApiName2>  |
    Und        "B" hinterlegt "C" in seiner Freigabeliste
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName" und setzen einen Endpunkt auf "B"
    Wenn       "B" versucht "C" direkt "Testnachricht 1" zu schreiben
    Dann       "B" ist nicht berechtigt "C" zu kontaktieren
    Und        "C" erhält KEINE Einladung von "B" [Retry 10 - 3]
    Und        "B" löscht "C" in seiner Freigabeliste

  #@Shuffle(true)
  #@DistinctColumn(ApiName1B)
  #@MaxSameColumnProperty(ApiName1B,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @Filter(ApiName2.hasTag("practitioner"))
    @SoftFilter(ApiName1B.hasTag("prefIOP"))
    @SoftFilter(ApiName2.hasTag("prefIOP"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |