# language: de
@File:FeatureFile_09_OrgOnly
@PRODUKT:TIM_FD @PRODUKT:TIM_Client
@AF-ID:AF_10061-01
@AK-ID:ML-123654 @AK-ID:ML-123663 @AK-ID:ML-132864 @AK-ID:ML-132592
@AF-ID:AF_10064-01
@AK-ID:ML-123672 @AK-ID:ML-123891 @AK-ID:ML-132589 @AK-ID:ML-137902
@AF-ID:AF_10058-01
@AK-ID:ML-123612 @AK-ID:ML-132588
@AF-ID:AF_10059-01
@AK-ID:ML-123627 @AK-ID:ML-132586
@AF-ID:AF_10036
Funktionalität:  09. Einladung von Akteuren außerhalb einer Organisation_OrgOnly

  AF_10061-01 - Einladung von Akteuren außerhalb einer Organisation
  ML-123654 - Suche im VZD-FHIR-Directory
  ML-123663 - Akteure sind dem Chatraum beigetreten
  ML-132864 - Berechtigungsprüfung aller Stufen
  ML-132592 - TI-M Rohdatenerfassung und -lieferung

  AF_10064-01 - Föderationszugehörigkeit eines Messenger-Service prüfen
  ML-123672 - Föderationsliste vom VZD-FHIR-Directory abrufen
  ML-123891 - Matrix-Domain Teil der Föderationsliste & Aktualitätscheck
  ML-132589 - TI-M Rohdatenerfassung und -lieferung
  ML-137902 - Aktualität - Föderationsliste Messenger-Proxy

  AF_10058-01 - Akteur (User-HBA) im Verzeichnisdienst hinzufügen
  ML-123612 - Akteur als Practitioner hinzufügen
  ML-132588 - TI-M Rohdatenerfassung und -lieferung

  AF_10059-01 - Organisationsressourcen im Verzeichnisdienst hinzufügen
  ML-123627 - Organisationsressourcen im VZD-FHIR-Directory hinzufügen
  ML-132586 - TI-M Rohdatenerfassung und -lieferung

  In diesem Anwendungsfall erfolgt gleichzeitig eine Prüfung des Berechtigungskonzept.

  TF 1 & 2 Einladung in Chat/Raum Teilqualifizierte Suche (OrgUser - OrgUser)

  @BP:P2P @Ctl:Chat @Ctl:SeachPart @Ctl:OrgOnly
  @TCID:TIM_11_AF_10901 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 109.01 Einladung außerhalb einer Organisation - Einladung in Chat - Teilqualifizierte Suche  (OrgUser - OrgUser)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
      | C | CLIENT    | <ApiName2> |
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName1" und setzen einen Endpunkt auf "B"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName2" und setzen einen Endpunkt auf "C"
    Und        "B" findet Healthcare-Service "HealthcareServiceName2" bei Suche nach Namen minus 0-1 (Anzahl vorne-hinten) Char(s) abgeschnitten
    Wenn       "B" schreibt "C" über den Healthcare-Service "HealthcareServiceName2" direkt "Testnachricht 1"
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung von "B"
    Und        "C" empfängt eine Nachricht "Testnachricht 1" von "B"

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName1B.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(false)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @SoftFilter(ApiName1B.hasTag("prefIOP"))
    @SoftFilter(ApiName2.hasTag("prefIOP"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |

  @BP:P2P @Ctl:Raum @Ctl:SeachPart @Ctl:OrgOnly
  @TCID:TIM_11_AF_10902 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 109.02 Einladung außerhalb einer Organisation - Einladung in Raum - Teilqualifizierte Suche (OrgUser - OrgUser)
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN | <ApiName1A> |
      | B | CLIENT    | <ApiName1B> |
      | C | CLIENT    | <ApiName2> |
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName1" und setzen einen Endpunkt auf "B"
    Und        "A" erstellt einen Healthcare-Service "HealthcareServiceName2" und setzen einen Endpunkt auf "C"
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Und        "B" findet Healthcare-Service "HealthcareServiceName2" bei Suche nach Namen minus 0-1 (Anzahl vorne-hinten) Char(s) abgeschnitten
    Und        "B" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "B" lädt "C" über den HealthcareService "HealthcareServiceName2" in den Chat-Raum "TIM Testraum 1" ein
    Dann       "C" erhält eine Einladung von "B"
    Und        "C" bestätigt eine Einladung in Raum "TIM Testraum 1" von "B"
    Und        "C" ist dem Raum "TIM Testraum 1" beigetreten

  #@Shuffle(true)
  #@MaxSameColumnProperty(ApiName1,homeserver,2)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName1B.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(false)
    @AllowDoubleLineup(true)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("client"))
    @Filter(ApiName2.hasTag("client"))
    @SoftFilter(ApiName1B.hasTag("prefIOP"))
    @SoftFilter(ApiName2.hasTag("prefIOP"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |