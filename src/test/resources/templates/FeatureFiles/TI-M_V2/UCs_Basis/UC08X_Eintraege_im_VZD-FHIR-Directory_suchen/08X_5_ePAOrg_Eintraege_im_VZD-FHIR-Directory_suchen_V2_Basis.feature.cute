# language: de
@File:FeatureFile_08X_05_V2_Basis @Ctl:UseCaseV2_08X_Basis
@PRODUKT:TI-M_Client_Basis
@Zul:ePA
@AFO-ID:A_25479
@AFO-ID:A_25428

Funktionalität: 08X. (5) Einträge im VZD-FHIR-Directory suchen (Basis Spec)

  Der Anwendungsfall beschreibt, wie ein Akteur im VZD-FHIR-Directory nach HealthcareService- undPractitionerRole-
  Ressourcen sucht. Dies setzt eine erfolgreiche Anmeldung des Akteurs an einem Messenger-Service voraus.

  COMMENT: Basis
  A_25479     Search Token
  A_25428     VZD-FHIR-Directory Inhalte

  Inhalt
  TF 1     ePA-User sucht HealthCareService  im VZD
  TF 2     ePa-User sucht Healthcareservice teilqualifiziert im VZD

  @WIP
  @Ctl:AllowAll @Ctl:OrgAdmin @Ctl:VZD
    @TCID:TIM_V2_BASIS_AF_08X0501 @PRIO:1 @TESTFALL:Positiv @STATUS:InBearbeitung
  Szenariogrundriss: 08X.05.01 Einträge im VZD-FHIR-Directory suchen - AllowAll - ePA-User sucht HealthCareService im VZD
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN  | <ApiName1A> |
      | B | PRO_CLIENT | <ApiName1B> |
      | C | EPA_CLIENT | <ApiName2> |
    Und        "B", "C" setzen den eigenen Authorization Mode auf "AllowAll"
    Wenn       "A" erstellt einen Healthcare-Service "HealthcareServiceName1" und setzen einen Endpunkt auf "B"
    Dann       "C" findet "B" im Healthcare-Service "HealthcareServiceName1" über die FDV-Schnittstelle

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName1A.properties["homeserver"].equals(ApiName2.properties["homeserver"]))
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName2.hasTag("epaClient"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |

  @WIP
  @Ctl:AllowAll @Ctl:OrgAdmin @Ctl:VZD
    @TCID:TIM_V2_BASIS_AF_08X0502 @PRIO:1 @TESTFALL:Positiv @STATUS:InBearbeitung
  Szenariogrundriss: 08X.05.02 Einträge im VZD-FHIR-Directory suchen - AllowAll - ePa-User sucht Healthcareservice teilqualifiziert im VZD
    Angenommen Es werden folgende Clients reserviert:
      | A | ORG_ADMIN   | <ApiName1A> |
      | B | PRO_CLIENT  | <ApiName1B> |
      | C | EPA_CLIENT  | <ApiName2> |
    Und        "B", "C" setzen den eigenen Authorization Mode auf "AllowAll"
    Wenn       "A" erstellt einen Healthcare-Service "HealthcareServiceName1" und setzen einen Endpunkt auf "B"
    Dann       "C" findet Healthcare-Service "HealthcareServiceName1" bei Suche nach Namen minus 0-1 (Anzahl vorne-hinten) Char(s) abgeschnitten über die FDV-Schnittstelle

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    #@DistinctProperty(homeserver)
    @Filter(ApiName1A.properties["homeserver"].equals(ApiName1B.properties["homeserver"]))
    @Filter(!ApiName2.properties["homeserver"].equals(ApiName1A.properties["homeserver"]))
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("orgAdmin"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName2.hasTag("epaClient"))

    Beispiele:
      | ApiName1A | ApiName1B | ApiName2 |