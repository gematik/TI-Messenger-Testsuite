# language: de
@File:FeatureFile_10X_05_V2_Basis @Ctl:UseCaseV2_10X_Basis
@PRODUKT:TI-M_FD_Basis
@Zul:ePA
@AFO-ID:A_26344
@AFO-ID:A_26263
@AFO-ID:A_26265
@AFO-ID:A_26289
@AFO-ID:A_25641-01

Funktionalität: 10X. (5) API Checks (Basis Spec)

  Die folgenden Testfälle sollen APIs (inkl. verbotenen und deprecated APIs) und deren Existenz bzw. Erreichbarkeit überprüfen.

  COMMENT: Basis
  A_26344    - Verbot von URL-Previews
  A_26263    - Unauthenticated Media
  A_26265    - TI-M FD Org-Admin Support
  A_26289    - Authentisierung von Profilabfragen
  A_25641-01 - Matrix Spezifikationsversion - Standard error response

  Inhalt
  TF 1 - 2   Verbot von URL-Previews
  TF 3       Deprecated Media Endpunkte - Ausserhalb von HomeServern (ePA User sendet Attachment)
  TF 4       Support Endpunkt
  TF 5 - 7   Authentisierung von Profilabfragen
  TF 8 - 9   Standardisierte Fehlermeldungen für unbekannte Endpunkte/Methoden

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0501 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.01 API Checks - Verbot von URL-Previews (ePA-User)
    Angenommen Es werden folgende Clients reserviert:
        | A | EPA_CLIENT  | <ApiName1> |
    Wenn       A fragt an seinem HomeServer die API "/_matrix/media/v3/preview_url" über ein "GET" ab
    Dann       erhält "A" einen Responsecode 404

    @Filter(ApiName1.hasTag("epaClient"))

    Beispiele:
      | ApiName1 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0502 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.02 API Checks - Verbot von URL-Previews (ePA-User)
    Angenommen Es werden folgende Clients reserviert:
        | A | EPA_CLIENT  | <ApiName1> |
    Wenn       A fragt an seinem HomeServer die API "/_matrix/client/v1/media/preview_url" über ein "GET" ab
    Dann       erhält "A" einen Responsecode 404

    @Filter(ApiName1.hasTag("epaClient"))

    Beispiele:
      | ApiName1 |

  @Ctl:AllowAll @Ctl:ApiCheck @Ctl:Attachment
  @TCID:TIM_V2_BASIS_AF_10X0503 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 10X.05.03 API Checks - Deprecated Media Endpunkte auf unterschiedlichen HomeServern (ePA User sendet Attachment)
    Angenommen Es werden folgende Clients reserviert:
      | A | EPA_CLIENT  | <ApiName1> |
      | B | PRO_CLIENT  | <ApiName2> |
    Und        "A", "B" setzen den eigenen Authorization Mode auf "AllowAll"
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Und        "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Und        "B" erhält eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" bestätigt eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" ist dem Raum "TIM Testraum 1" beigetreten
    Wenn       "A" sendet ein Attachment "bild.jpg" als "m.image" an den Raum "TIM Testraum 1"
    Und        B fragt an seinem HomeServer die media API "/_matrix/media/v3/download/{serverName}/{mediaId}" inkl Parameterbefüllung über ein "GET" ab
    Dann       erhält "B" einen Responsecode 200
    Und        B fragt an seinem HomeServer die media API "/_matrix/media/v3/download/{serverName}/{mediaId}/{fileName}" inkl Parameterbefüllung über ein "GET" ab
    Dann       erhält "B" einen Responsecode 200
    Und        B fragt an seinem HomeServer die media API "/_matrix/media/v3/thumbnail/{serverName}/{mediaId}" inkl Parameterbefüllung über ein "GET" ab
    Dann       erhält "B" einen Responsecode 200

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName2,homeserver,1) #
    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("epaClient"))
    @Filter(ApiName2.hasTag("proClient"))

    Beispiele:
      | ApiName1 | ApiName2 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0504 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 10X.05.04 API Checks - Support Endpunkt (ePA-User)
    Angenommen A fragt an Schnittstelle <ApiName1> die Home-Server-Adresse ab
    Und        A fragt an seinem HomeServer die API "/.well-known/matrix/support" über ein "GET" ab
    Dann       erhält "A" einen Responsecode 200
    Und        "A" überprüft, dass die Response befüllt ist

    @Filter(ApiName1.hasTag("epaClient"))

    Beispiele:
      | ApiName1 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0505 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.05 API Checks - Authentisierung von Profilabfragen
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_CLIENT  | <ApiName1> |
    Und        B fragt an Schnittstelle <ApiName2> die Home-Server-Adresse ab
    Wenn       B fragt an seinem HomeServer die profile API "/_matrix/client/v3/profile/{userId}" inkl Parameterbefüllung von "A" über ein "GET" ab
    Dann       erhält "B" einen Responsecode 401

    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("proClient"))
    @Filter(ApiName2.hasTag("epaClient"))

    Beispiele:
      | ApiName1 | ApiName2 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0506 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.06 API Checks - Authentisierung von Profilabfragen mit avatar_url
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_CLIENT  | <ApiName1> |
    Und        B fragt an Schnittstelle <ApiName2> die Home-Server-Adresse ab
    Wenn       B fragt an seinem HomeServer die profile API "/_matrix/client/v3/profile/{userId}/avatar_url" inkl Parameterbefüllung von "A" über ein "GET" ab
    Dann       erhält "B" einen Responsecode 401

    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("proClient"))
    @Filter(ApiName2.hasTag("epaClient"))

    Beispiele:
      | ApiName1 | ApiName2 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0507 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.07 API Checks - Authentisierung von Profilabfragen mit displayname
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_CLIENT  | <ApiName1> |
    Und        B fragt an Schnittstelle <ApiName2> die Home-Server-Adresse ab
    Wenn       B fragt an seinem HomeServer die profile API "/_matrix/client/v3/profile/{userId}/displayname" inkl Parameterbefüllung von "A" über ein "GET" ab
    Dann       erhält "B" einen Responsecode 401

    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("proClient"))
    @Filter(ApiName2.hasTag("epaClient"))

    Beispiele:
      | ApiName1 | ApiName2 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0508 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.08 API Checks - Standardisierte Fehlermeldungen für unbekannte Endpunkte
    Angenommen Es werden folgende Clients reserviert:
      | A | EPA_CLIENT  | <ApiName1> |
    Wenn       A fragt an seinem HomeServer die API "/_matrix/media/v3/config" über ein "GET" ab
    Dann       erhält "A" einen Responsecode 404

    @Filter(ApiName1.hasTag("epaClient"))

    Beispiele:
      | ApiName1 |

  @Ctl:ApiCheck
  @TCID:TIM_V2_BASIS_AF_10X0509 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 10X.05.09 API Checks - Standardisierte Fehlermeldungen für unbekannte Methoden
    Angenommen A fragt an Schnittstelle <ApiName1> die Home-Server-Adresse ab
    Wenn       A fragt an seinem HomeServer die API "/.well-known/matrix/support" über ein "DELETE" ab
    Dann       erhält "A" einen Responsecode 405

    @Filter(ApiName1.hasTag("epaClient"))

    Beispiele:
      | ApiName1 |