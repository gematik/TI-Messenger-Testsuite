# language: de
@File:FeatureFile_05_07_V2_Basis @Ctl:UseCaseV2_05_Basis
@PRODUKT:TI-M_Client_Basis @PRODUKT:TI-M_FD_Basis @PRODUKT:VZD_FHIR
@Zul:ePA
@AF-ID:AF_10061-04
@AFO-ID:A_25045-01
@AFO-ID:A_25046
@NB:NEIN

Funktionalität: 5.1.5 (7) Einladung von Akteuren außerhalb einer Organisation (Basis Spec)

  In diesem Anwendungsfall wird ein Akteur außerhalb einer Organisation eingeladen. Für die Suche nach Akteuren
  außerhalb der Organisation kann das VZD-FHIR-Directory verwendet werden. Ist die MXID des gesuchten Akteurs dort nicht
  vorhanden, muss es die Möglichkeit geben, die Kontaktaufnahme auch auf anderen Wegen zu ermöglichen,
  mindestens mittels manueller Eingabe der MXID. Weitere Optionen wie z. B. QR-Code-Scans sind zulässig.

  COMMENT: Basis
  AF_10061-04 Einladung von Akteuren außerhalb einer Organisation
  A_25045-01  Funktionsumfang der Berechtigungskonfiguration
  A_25046     Durchsetzung der Berechtigungskonfiguration - Client

  Inhalt
  TF 1  - 2  ePA-User lädt HBA-User ein (AllowAll) Chat/Raum

  @Ctl:AllowAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_BASIS_AF_050701 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.07.01 Einladung außerhalb einer Organisation - Chat - AllowAll - ePA-User lädt HBA-User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | EPA_CLIENT        | <ApiName1> |
      | B | PRO_PRACTITIONER  | <ApiName2>  |
    Und        "A" setzt den eigenen Authorization Mode auf "AllowAll"
    Und        "B" setzt den eigenen Authorization Mode auf "AllowAll"
    Und        "B" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "A" findet "B" in FHIR über die FDV-Schnittstelle
    Und        "A" schreibt "B" direkt "Testnachricht 1"
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "A"

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("epaClient"))
    @Filter(ApiName2.hasTag("proClient"))
    @Filter(ApiName2.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 |

  @Ctl:AllowAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_BASIS_AF_050702 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.07.02 Einladung außerhalb einer Organisation - Raum - AllowAll - ePA-User lädt HBA-User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | EPA_CLIENT        | <ApiName1> |
      | B | PRO_PRACTITIONER  | <ApiName2>  |
    Und        "A" setzt den eigenen Authorization Mode auf "AllowAll"
    Und        "B" setzt den eigenen Authorization Mode auf "AllowAll"
    Und        "B" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "A" findet "B" in FHIR über die FDV-Schnittstelle
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Und        "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" bestätigt eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" ist dem Raum "TIM Testraum 1" beigetreten

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @DistinctProperty(homeserver)
    @AllowSelfCombine(false)
    @AllowDoubleLineup(false)
    @Filter(ApiName1.hasTag("epaClient"))
    @Filter(ApiName2.hasTag("proClient"))
    @Filter(ApiName2.hasTag("practitioner"))

    Beispiele:
      | ApiName1 | ApiName2 |


