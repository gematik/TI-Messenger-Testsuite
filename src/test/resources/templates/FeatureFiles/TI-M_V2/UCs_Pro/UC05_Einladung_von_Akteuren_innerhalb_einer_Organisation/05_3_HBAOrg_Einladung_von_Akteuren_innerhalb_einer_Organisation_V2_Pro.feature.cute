# language: de
@File:FeatureFile_05_03_V2_Pro @Ctl:UseCaseV2_05_Pro @Ctl:OneHomeServer
@PRODUKT:TI-M_Client_Pro @PRODUKT:TI-M_FD_Pro
@PRODUKT:TI-M_Client_Basis @PRODUKT:TI-M_FD_Basis
@Zul:Pro
@AF-ID:AF_10104-03
@AFO-ID:A_25045-01
@AFO-ID:A_25046
@NB:JA

Funktionalität: 5.1.5 (3) Einladung von Akteuren innerhalb einer Organisation (Pro Spec)

  In diesem Anwendungsfall wird ein Akteur, der zu einer gemeinsamen Organisation gehört, in einen Raum eingeladen,
  um Aktionen auszuführen. Für die Suche nach Akteuren innerhalb einer gemeinsamen Organisation durchsucht ein TI-M
  Client das Nutzerverzeichnis seiner Organisation auf dem Matrix-Homeserver. Anschließend wird die Einladung vom
  Einladenden an den Messenger-Proxy übermittelt. Dieser prüft, ob die beteiligten Akteure bei ihm registriert sind.
  Ist dies der Fall, erfolgt die Weiterleitung an den Matrix-Homeserver der Akteure. Ist dies nicht der Fall, handelt
  es sich bei dem einzuladenden Akteur nicht um einen Akteur innerhalb der Organisation und die Einladung wird für die
  externe Zustellung weitergeleitet.

  COMMENT: Pro
  AF_10104-03 Einladung von Akteuren innerhalb einer Organisation
  COMMENT: Basis
  A_25045-01  Funktionsumfang der Berechtigungskonfiguration
  A_25046     Durchsetzung der Berechtigungskonfiguration - Client

  Inhalt
  TF 1  - 2  User (AllowAll) wird in Chat/Raum eingeladen
  TF 3  - 4  User (BlockAll) wird in Chat/Raum eingeladen - Negativ

  @Ctl:AllowAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_PRO_AF_050301 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.03.01 Einladung innerhalb einer Organisation - Chat - AllowAll - HBA User lädt anderen User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_PRACTITIONER  | <ApiName1A> |
      | B | PRO_CLIENT        | <ApiName1B> |
    Und        "A", "B" setzen den eigenen Authorization Mode auf "AllowAll"
    Und        "A" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Wenn       "A" findet TI-Messenger-Nutzer "B" bei der Suche im HomeServer
    Und        "A" schreibt "B" direkt "Testnachricht 1"
    Dann       "B" erhält eine Einladung von "A"
    Und        "B" bestätigt eine Einladung von "A"
    Und        "B" empfängt eine Nachricht "Testnachricht 1" von "A"

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @EqualProperty(homeserver)
    @AllowSelfCombine(true)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("proClient"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName1A.hasTag("practitioner"))

    Beispiele:
      | ApiName1A | ApiName1B |

  @Ctl:AllowAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_PRO_AF_050302 @PRIO:1 @TESTFALL:Positiv @STATUS:Implementiert
  Szenariogrundriss: 05.03.02 Einladung innerhalb einer Organisation - Raum - AllowAll - HBA User lädt anderen User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_PRACTITIONER  | <ApiName1A> |
      | B | PRO_CLIENT        | <ApiName1B> |
    Und        "A", "B" setzen den eigenen Authorization Mode auf "AllowAll"
    Und        "A" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Wenn       "A" findet TI-Messenger-Nutzer "B" bei der Suche im HomeServer
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" findet TI-Messenger-Nutzer "B" bei der Suche im HomeServer
    Und        "A" lädt "B" in Chat-Raum "TIM Testraum 1" ein
    Dann       "B" erhält eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" bestätigt eine Einladung in Raum "TIM Testraum 1" von "A"
    Und        "B" ist dem Raum "TIM Testraum 1" beigetreten


    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @EqualProperty(homeserver)
    @AllowSelfCombine(true)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("proClient"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName1A.hasTag("practitioner"))

    Beispiele:
      | ApiName1A | ApiName1B |

  @Ctl:BlockAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_PRO_AF_050303 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 05.03.03 Einladung innerhalb einer Organisation - Chat - BlockAll - HBA User lädt anderen User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_PRACTITIONER  | <ApiName1A> |
      | B | PRO_CLIENT        | <ApiName1B> |
    Und        "A", "B" setzen den eigenen Authorization Mode auf "BlockAll"
    Und        "A" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Wenn       "A" findet TI-Messenger-Nutzer "B" bei der Suche im HomeServer
    Und        "A" versucht "B" direkt "Testnachricht 1" zu schreiben
    Dann       erhält "A" einen Responsecode 403
    Und        "B" erhält KEINE Einladung von "A" [Retry 10 - 3]

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @EqualProperty(homeserver)
    @AllowSelfCombine(true)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("proClient"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName1A.hasTag("practitioner"))

    Beispiele:
      | ApiName1A | ApiName1B |

  @Ctl:BlockAll @Ctl:VZD @Ctl:BP
    @TCID:TIM_V2_PRO_AF_050304 @PRIO:1 @TESTFALL:Negativ @STATUS:Implementiert
  Szenariogrundriss: 05.03.04 Einladung innerhalb einer Organisation - Raum - BlockAll - HBA User lädt anderen User ein
    Angenommen Es werden folgende Clients reserviert:
      | A | PRO_PRACTITIONER  | <ApiName1A> |
      | B | PRO_CLIENT        | <ApiName1B> |
    Und        "A", "B" setzen den eigenen Authorization Mode auf "BlockAll"
    Und        "A" hinterlegt seine MXID im Verzeichnis Dienst
    Und        "B" findet "A" in FHIR
    Und        "A" erstellt einen Chat-Raum "TIM Testraum 1"
    Wenn       "A" findet TI-Messenger-Nutzer "B" bei der Suche im HomeServer
    Und        "A" versucht "B" in Chat-Raum "TIM Testraum 1" einzuladen
    Dann       erhält "A" einen Responsecode 403
    Und        "B" erhält KEINE Einladung von "A" für den Raum "TIM Testraum 1" [Retry 10 - 3]

    @Shuffle(true) #
    #@MaxSameColumnProperty(ApiName1A,homeserver,1) #
    @EqualProperty(homeserver)
    @AllowSelfCombine(true)
    @AllowDoubleLineup(false)
    @Filter(ApiName1A.hasTag("proClient"))
    @Filter(ApiName1B.hasTag("proClient"))
    @Filter(ApiName1A.hasTag("practitioner"))

    Beispiele:
      | ApiName1A | ApiName1B |